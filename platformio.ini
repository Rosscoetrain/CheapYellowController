; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = Elecrow_DIS06043H

src_dir = CYC
include_dir = CYC


; Shared options
[env]
build_flags =
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
;  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_CONF_PATH=${PROJECT_DIR}/lv_conf.h
  -D PLATFORMIO_BUILD

  ; Enable LVGL demo, remove when working on your own project
;  -D LV_USE_DEMO_WIDGETS=0
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h

lib_deps =
  ; Use direct URL, because package registry is unstable
;  lvgl@9.1
;  lvgl@9.2.2
  lvgl@8.4
  moononournation/GFX Library for Arduino@^1.6.0
  michalmonday/CSV Parser@^1.4.1

lib_archive = false



;[env:emulator_64bits]
;platform = native@^1.1.3
;extra_scripts = 
;  pre:support/sdl2_paths.py ; Tries to find SDL2 include and lib paths on your system - specifically for MacOS w/ Homebrew
;  post:support/sdl2_build_extra.py
;build_flags =
;  ${env.build_flags}
;  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
;  -D LV_LOG_PRINTF=1
;  ; Add recursive dirs for hal headers search
;  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
;  -lSDL2
;  ; SDL drivers options
;  -D LV_LVGL_H_INCLUDE_SIMPLE
;  -D LV_DRV_NO_CONF
;  -D LV_USE_SDL
;  -D SDL_HOR_RES=480
;  -D SDL_VER_RES=320  
;  -D SDL_ZOOM=1
;  -D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
;
;  ; LVGL memory options, setup for the demo to run properly
;  -D LV_MEM_CUSTOM=1
;  -D LV_MEM_SIZE="(128U * 1024U)"
;  
;lib_deps =
;  ${env.lib_deps}
;  skaygin/ArduinoNative@^0.1.4
;  
;build_src_filter =
;  +<*>
;  +<../hal/sdl2>
;  ; Force compile LVGL demo, remove when working on your own project
;;  +<../.pio/libdeps/emulator_64bits/lvgl/demos>



;[env:emulator_32bits]
;extends = env:emulator_64bits
;build_flags =
;  ${env:emulator_64bits.build_flags}
;  -m32
;build_src_filter =
;  +<*>
;  +<../hal/sdl2>
;  +<../.pio/libdeps/emulator_32bits/lvgl/demos>

;[env:stm32f429_disco]
;platform = ststm32@^8.0.0
;board = disco_f429zi
;framework = stm32cube
;build_flags =
;  ${env.build_flags}
;  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
;  ; header's default is 25MHz, but board uses 8MHz crystal
;  -D HSE_VALUE=8000000
;  ; Add recursive dirs for hal headers search
;  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32f429_disco')]))"
;lib_deps =
;  ${env.lib_deps}
;  BSP-ili9341
;  BSP-stmpe811
;build_src_filter =
;  +<*>
;  +<../hal/stm32f429_disco>
;  ; Force compile LVGL demo, remove when working on your own project
;  +<../.pio/libdeps/stm32f429_disco/lvgl/demos>



; this is for Elecrow display boards only tested with the DIS06043H 4.3" 480x272 board

[env:Elecrow_DIS06043H]
platform = espressif32
board = esp32-s3-devkitc-1-myboard
framework = arduino
board_build.arduino.memory_type = qio_qspi

board_build.filesystem = littlefs

monitor_speed = 115200
monitor_echo = yes

upload_speed = 460800

build_flags =
  ${env.build_flags}
  -DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  -D ESP32DIS06043H
; enable serial output on usb device
  -D ENABLE_SERIAL
lib_deps =
;  WiFi
  ${env.lib_deps}
  rosscoetrain/arduino xpt2046 library@^0.2.0
build_src_filter =
  +<*>




[env:Elecrow_DIS08070H]
platform = espressif32
board = esp32-s3-devkitc-1-myboard
framework = arduino
board_build.arduino.memory_type = qio_qspi

board_build.filesystem = littlefs

monitor_speed = 115200
monitor_echo = yes

upload_speed = 460800

build_flags =
  ${env.build_flags}
  -DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  -D ESP32DIS08070H
; enable serial output on usb device
  -D ENABLE_SERIAL
lib_deps =
  ${env.lib_deps}
  tamctec/TAMC_GT911@^1.0.2
build_src_filter =
  +<*>

